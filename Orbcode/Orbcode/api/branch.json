[
	{
		"type": "orb_anchor",
		"message0": "anchor ⚓️ %1",
		"args0": [
			{
				"type": "field_input",
				"name": "NAME",
				"text": "id",
				"align": "RIGHT"
			}
		],
		"colour": 120,
		"previousStatement": null,
		"nextStatement": null,
		"tooltip": "Anchor for jump."
	},
	{
		"type": "orb_anchor_id",
		"message0": "⚓️ %1",
		"args0": [
			{
				"type": "field_label",
				"name": "NAME"
			}
		],
		"extensions": [ "orb_anchor_selector" ],
		"output": "AnchorID",
		"colour": 120,
		"tooltip": "Position of anchor for jump."
	},
	{
		"type": "orb_jump",
		"message0": "jump to %1",
		"args0": [
			{
				"type": "input_value",
				"name": "ANCHOR",
				"align": "RIGHT",
				"check": "AnchorID"
			}
		],
		"colour": 100,
		"previousStatement": null,
		"nextStatement": "orb_anchor",
		"tooltip": "Jump to anchor.",
		"TODO": "Mutator needed to behaviour like variables but more automated & restricted. (try `procedures_defnoreturn_mutator`)"
	},
	{
		"type": "orb_gosub",
		"message0": "gosub to %1",
		"args0": [
			{
				"type": "input_value",
				"name": "ANCHOR",
				"align": "RIGHT",
				"check": "AnchorID"
			}
		],
		"colour": 100,
		"previousStatement": null,
		"nextStatement": "orb_anchor",
		"tooltip": "GOSUB: jumps to a numbered or labelled line, executes the code it finds there until it reaches a RETURN Command, on which it jumps back to the operator following the GOSUB – either after a colon, or on the next line. This is used to implement subroutines.",
		"TODO": "Mutator needed to behaviour like variables but more automated & restricted."
	},


	{
		"type": "orb_jump_indexed",
		"message0": "check value of %1",
		"message1": "and jump to: %1",
		"message2": "= 1 :%1",
		"args0": [
			{
				"type": "input_value",
				"name": "VAR",
				"check": "Number",
				"align": "RIGHT"
			}
		],
		"args1": [
			{
				"type": "input_dummy",
            "name": "dummy",
            "align": "CENTRE"
			}
		],
		"args2": [
			{
				"type": "input_value",
				"name": "ANCHOR0",
				"check": "AnchorID",
				"align": "RIGHT"
			}
		],
		"extensions": [
			"orb_jump_indexed_mutator"
		],
		"colour": 100,
		"inputsInline": false,
		"previousStatement": null,
		"nextStatement": null,
		"tooltip": "Indexed Branching: `on X*Y goto 100,200,300,400`."
	},
	{
		"type": "orb_gosub_indexed",
		"message0": "on %1 gosub to %2",
		"args0": [
			{
				"type": "field_dropdown",
				"name": "VAR",
				"options": [
					[ "A", "A" ],
					[ "B", "B" ],
					[ "C", "C" ],
					[ "D", "D" ],
					[ "E", "E" ],
					[ "F", "F" ],
					[ "G", "G" ],
					[ "H", "H" ],
					[ "I", "I" ],
					[ "J", "J" ],
					[ "K", "K" ],
					[ "L", "L" ],
					[ "M", "M" ],
					[ "N", "N" ],
					[ "O", "O" ],
					[ "P", "P" ],
					[ "Q", "Q" ],
					[ "R", "R" ],
					[ "S", "S" ],
					[ "T", "T" ],
					[ "U", "U" ],
					[ "V", "V" ],
					[ "W", "W" ],
					[ "X", "X" ],
					[ "Y", "Y" ]
				]
			},
			{
				"type": "input_value",
				"name": "ANCHOR0",
				"check": "AnchorID"
			}
		],
		"extensions": [
			"orb_jump_indexed_mutator"
		],
		"colour": 100,
		"inputsInline": false,
		"previousStatement": null,
		"nextStatement": null,
		"tooltip": "Indexed Branching: `on X*Y goto 100,200,300,400`."
	},




	{
		"type": "orb_end",
		"message0": "end",
		"colour": "#BBAAAA",
		"previousStatement": null,
		"tooltip": "Programs terminate in the following ways: the final line number is executed, an error occurs, an abort command is sent or an end statement is encountered. This statement allows you to, well, end in the middle of a program."
	},
	{
		"type": "orb_return",
		"message0": "return",
		"colour": "#BBAAAA",
		"previousStatement": null,
		"nextStatement": null,
		"tooltip": "After a GOSUB command RETURN command, on which it jumps back to the operator following the GOSUB – either after a colon, or on the next line. This is used to implement subroutines."
	},
	{
		"type": "orb_reset",
		"message0": "reset",
		"colour": "#BBAAAA",
		"previousStatement": null,
		"nextStatement": null,
		"tooltip": "This resets the orbBasic environment and restarts the program freshly from the initial starting line number. All gosub and for/next frames are cleared and all variables set to zero."
	},


	{
		"type": "orb_func_sleep",
		"message0": "sleep %1 ms.",
		"args0": [
			{
				"type": "field_number",
				"name": "TIME",
				"precision": 1,
				"min": 1,
				"max": 65535,
				"check": "Number"
			}
		],
		"message1": "wake up and run kernel %1",
		"args1": [
			{
				"type": "field_number",
				"name": "MACRO_ID",
				"precision": 1,
				"min": 0,
				"max": 253
			}
		],
		"message2": "at anchor %1",
		"args2": [
			{
				"type": "field_number",
				"name": "ANCHOR",
				"check": "Number"
			}
		],
		"colour": 290,
		"nextStatement": null,
		"previousStatement": null,
		"tooltip": "This command immediately puts Sphero to sleep with a few modifiers: duration, macro, anchor."
	}
]
